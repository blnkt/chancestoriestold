// Component Appearance
// --------------------

// Appearance mixins contain primarily texture parameters: background-color, transparency, borders, etc. as well
// as some minor, internal structural properties where abstraction isn't required (to prevent over-abstracting)

// They may contain:
// Nested classes/elements with other structural or textural properties

// Appearance blocks should not contain typographic classes nor be dependent on the font-size from the element, unless
// it is as a non-dependent, comprehensive mixin (for now), or if the font size is being used for structural reasons (like the size of an icon-font glyph)

// Contents
// --------------------------
// - Imports
// - Prototypes
// - Utilities
// - Layout
// - Type
// - Images
// - Article Lists
// - Navigation Lists
// - Buttons/Links
// - Tables
// - Forms

// Basic utility patterns
// --------------------------------------------------------
// Visually Hidden, for skip links and screen-reader only elements
@mixin screenReaderText {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0;
}

// Image replacement, for icons and things with hidden accessibility text
@mixin imageReplacement {
  display: block;
  overflow: hidden;
  text-align: left;
  text-indent: -999em;
  background-color: transparent;
  background-repeat: no-repeat;
  border: 0;
  direction: ltr;

  br {
    display: none;
  }
}

.background-primary {
  background-color: $colorPrimary;
}

// Basic utility patterns
// --------------------------------------------------------

@keyframes fadeIn {
  from {opacity: 0}
  to {opacity: 1}
}

@keyframes fadeOut {
  from {opacity: 1}
  to {opacity: 0}
}

@keyframes slideUp {
  from {top: 0}
  to {top: 10px}
}

@keyframes slideDown {
  from {top:0}
  to {top: -10px}
}

@keyframes swingRight {
  from {transform: rotate(0deg)}
  to {transform: rotate(45deg)}
}

@keyframes swingLeft {
  from {transform: rotate(0deg)}
  to {transform: rotate(-90deg)}
}

.hamburger-box {
  @include buttonUnstyled;
  position: relative;
  display: inline-block;
  width: 40px;
  height: 24px;
  padding: 0;
  transition: opacity $timing $duration;

  &:focus {
    outline: none;
  }

  &:hover {
    opacity: 0.6;
  }

  &.active {
    .hamburger-inner {
      animation: swingRight $durationMedium $durationMedium forwards;

      &::before {
        animation: slideDown $duration reverse forwards, swingLeft $durationMedium $durationMedium forwards;
      }

      &::after {
        animation: slideUp $durationMedium reverse forwards;
      }
    }
  }

  .hamburger-inner {
    position: absolute;
    width: 40px;
    height: 4px;
    border-radius: 4px;
    background-color: $white;

    &::after, &::before {
      content: '';
      position: absolute;
      left: 0;
      width: 40px;
      height: 4px;
      transition: top $timing $duration;
      border-radius: 4px;
      background-color: $white;
    }

    &::before {
      top: -10px;
    }

    &::after {
      top: 10px;
    }
  }

  .hamburger-inner {
    top: 50%;
    display: block;
    margin-top: -2px;
  }
}
